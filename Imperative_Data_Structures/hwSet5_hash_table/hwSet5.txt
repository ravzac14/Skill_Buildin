Zack Raver

This is hw set 5 from the data structures ilc

Set 5: 5.1)
Given input {4371, 1323, 6173, 4199, 4344, 9679, 1989} and a hash function
h(x) = x (mod () 10), show the resulting
a. separate chaining hash table

[x,x,x,x,x,x,x,x,x,x]
[x,4371,x,x,x,x,x,x,x,x]
[x,4371,1323,x,x,x,x,x,x,x]
[x,4371,1323,x,x,x,x,x,x,x]
        6173
[x,4371,1323,x,x,x,x,x,4199]
        6173
[x,4371,1323,4344,x,x,x,x,4199]
        6173
[x,4371,1323,4344,x,x,x,x,4199]
        6173              9679
[x,4371,1323,4344,x,x,x,x,4199]
        6173              9679
                          1989

b. hash table using linear probing

[x,x,x,x,x,x,x,x,x,x]
[x,4371,x,x,x,x,x,x,x,x]
[x,4371,x,1323,x,x,x,x,x,x]
[6173,4371,x,1323,x,x,x,x,x,x]
[6173,4371,x,1323,x,x,x,x,x,4199]
[6173,4371,x,1323,4344,x,x,x,x,4199]
[6173,4371,9679,1323,4344,x,x,x,x,4199]
[6173,4371,9679,1323,4344,1989,x,x,x,4199]

c. hash table using quadratic probing

[x,x,x,x,x,x,x,x,x,x]
[x,4371,x,x,x,x,x,x,x,x]
[x,4371,x,1323,x,x,x,x,x,x]
[x,4371,x,1323,6173,x,x,x,x,x]
[x,4371,x,1323,6173,x,x,x,x,4199]
[x,4371,x,1323,6173,x,x,x,x,4199]
[x,4371,x,1323,6173,x,4344,x,x,4199]
[9679,4371,x,1323,6173,x,4344,1989,x,4199]


d. hash table with second hash function h2(x) = 7 - (xmod7)

[x,x,x,x,x,x,x,x,x,x]
[x,4371,x,1323,x,x,x,x,x,x]
[x,4371,x,1323,x,x,x,x,x,6173]
[x,4371,x,1323,4344,x,x,x,x,6173]
[x,4371,x,1323,4344,x,4199,x,x,6173]
[1989,4371,x,1323,4344,x,4199,x,x,6173]


5.2) Show the rehashing of tables in 5.1

Ill just do one, because i get the idea: heres the quadratic prober
[x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x]
[x,9679,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x,x]
[x,9679,x,x,x,x,x,x,x,x,x,4371,x,x,x,x,x,x,x,x]
[x,9679,x,1323,x,x,x,x,x,x,x,4371,x,x,x,x,x,x,x,x]
[x,9679,x,1323,x,x,x,x,x,x,x,4371,x,6173,x,x,x,x,x,x]
[x,9679,x,1323,4344,x,x,x,x,x,x,4371,x,6173,x,x,x,x,x,x]
[x,9679,x,1323,4344,x,x,x,x,1989,x,4371,x,6173,x,x,x,x,x,x]
[x,9679,x,1323,4344,x,x,x,x,1989,x,4371,x,6173,x,x,x,x,x,4199]


5.8) Suppose instead of quadratic probing we use cubic probing, here the
ith probe is at hash(x) + i^3...does this improve in quadratic?

No i dont think it improves quadratic, in fact the max amount of usable table declines


5.11) Suppose that to mitigate the effects of secondary clustering we use
the collision resolution function f(i) = i * r(hash(x)) where (hash(x)) is
the 32bit hash value not yet scaled to a suitable array index, and r(Y) = |4827y (mode  (2^31-1))|

That would depend pretty heavily on the table size, and seems like it would only work for 
a small set of table sizes


5.17) Write a numbered BASIC program that uses gotos : renumber the statements
so that the first statement F and each statement has a number D higher that the previous statements
You may assume an aupper limit N statements, but the statement numbers in the input might be as large
as a 32 bit int. Must run in linear time:



5.19) Under certain assumptions the expected cost of an insertion into a hash table with secondary 
clustering is given by 1/(1-LM) - LM - ln(1-LM). Unfortunately this formula is not accurate for 
quadratic probing. However assuming it is determine:
a. the expected cost of an unsuccessful search

1 / table occupied

b. "" of a successful search

< 1/ table occupied

